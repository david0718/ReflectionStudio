<ad:DockableContent x:Class="ReflectionStudio.Components.UserControls.AssemblyExplorer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:core="clr-namespace:ReflectionStudio.Core.Reflection.Types;assembly=ReflectionStudio.Core"
    xmlns:controls="clr-namespace:ReflectionStudio.Controls;assembly=ReflectionStudio.Controls"
    xmlns:converters="clr-namespace:ReflectionStudio.Components.Converters"
    Title="Assemblies" Padding="5" IsCloseable="true"
    Icon="/ReflectionStudio;component/Resources/Images/32x32/assembly.png">
    <ad:DockableContent.Resources>

        <converters:NetTypeToImageConverter x:Key="NetTypeToImageConverter"/>
        <converters:ObjectToBooleanConverter x:Key="ObjectToBooleanConverter"/>

        <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{DynamicResource NormalForegroundBrush}"/>
            <Setter Property="FocusVisualStyle" Value="{DynamicResource TreeViewExtendedItemFocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" Style="{DynamicResource TreeViewExtendedItemExpandCollapseToggleStyle}"
                                IsChecked="{Binding Path=IsExpanded,
                                RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press"/>
                            <Border Name="Bd"
                                  Grid.Column="1"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}">
                                <StackPanel Orientation="Horizontal">
                                    <Image VerticalAlignment="Center" Width="16" Height="16" Margin="0,0,5,0"
                                           Source="{TemplateBinding Tag, Converter={StaticResource NetTypeToImageConverter}}" />
                                    <ContentPresenter x:Name="PART_Header"
                                          ContentSource="Header"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </StackPanel>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"
                                  Grid.Row="1"
                                  Grid.Column="1"
                                  Grid.ColumnSpan="2"/>
                            </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Width" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SelectedBackgroundBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource SelectedForegroundBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource SelectedBackgroundBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource SelectedForegroundBrush}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </ad:DockableContent.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="28" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <StackPanel HorizontalAlignment="Stretch" Orientation="Horizontal">
            <controls:FlatImageButton Name="BtnAddAssembly" Click="BtnAddAssembly_Click"
                                      Image="/ReflectionStudio;component/Resources/Images/16x16/new_item.png" />
            <controls:FlatImageButton Name="BtnAddAssemblyFromFolder" Click="BtnAddAssemblyFromFolder_Click"
                                      Image="/ReflectionStudio;component/Resources/Images/16x16/folders/open_folder.png" />
            <controls:FlatImageButton Name="BtnRefresh" Click="BtnRefresh_Click" 
                                      Image="/ReflectionStudio;component/Resources/Images/16x16/application/refresh.png" />
            <controls:FlatImageButton Name="BtnRemove" Click="BtnRemove_Click"
                                      Image="/ReflectionStudio;component/Resources/Images/16x16/application/delete.png" />
        </StackPanel>
        <controls:TreeViewExtended Name="treeViewAss" Grid.Row="1" Tag="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem.Tag}" 
                                   MouseMove="treeViewAss_MouseMove" PopulateOnDemand="True"
                                   SelectedItemChanged="treeViewAss_SelectedItemChanged" >
            <TreeView.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add to class diagram"
                              DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                              
                              CommandParameter="{Binding Tag}"
                              IsEnabled="{Binding Tag, Converter={StaticResource ObjectToBooleanConverter}}" />
                    <Separator/>
                    <MenuItem Header="Properties"
                              DataContext="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
                              Command="ApplicationCommands.Properties"
                              CommandParameter="{Binding Tag}"
                              IsEnabled="{Binding Tag, Converter={StaticResource ObjectToBooleanConverter}}">
                        <MenuItem.Icon>
                            <controls:AutoGreyableImage Source="/ReflectionStudio;component/Resources/Images/16x16/properties.png" Width="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </TreeView.ContextMenu>
        </controls:TreeViewExtended>
        
    </Grid>
</ad:DockableContent>
