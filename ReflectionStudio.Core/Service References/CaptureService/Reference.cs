//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReflectionStudio.Core.CaptureService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CaptureService.ICaptureService")]
    public interface ICaptureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaptureService/StartCapture", ReplyAction="http://tempuri.org/ICaptureService/StartCaptureResponse")]
        bool StartCapture();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaptureService/StopCapture", ReplyAction="http://tempuri.org/ICaptureService/StopCaptureResponse")]
        bool StopCapture();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaptureService/IsCapturing", ReplyAction="http://tempuri.org/ICaptureService/IsCapturingResponse")]
        bool IsCapturing();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaptureService/GetCaptureFileList", ReplyAction="http://tempuri.org/ICaptureService/GetCaptureFileListResponse")]
        string[] GetCaptureFileList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaptureService/GetCurrentCaptureFileName", ReplyAction="http://tempuri.org/ICaptureService/GetCurrentCaptureFileNameResponse")]
        string GetCurrentCaptureFileName();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaptureService/RetreiveCapture", ReplyAction="http://tempuri.org/ICaptureService/RetreiveCaptureResponse")]
        string RetreiveCapture(string fileName, bool withDelete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICaptureService/DeleteCapture", ReplyAction="http://tempuri.org/ICaptureService/DeleteCaptureResponse")]
        bool DeleteCapture(string fileName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICaptureServiceChannel : ReflectionStudio.Core.CaptureService.ICaptureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CaptureServiceClient : System.ServiceModel.ClientBase<ReflectionStudio.Core.CaptureService.ICaptureService>, ReflectionStudio.Core.CaptureService.ICaptureService {
        
        public CaptureServiceClient() {
        }
        
        public CaptureServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CaptureServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CaptureServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CaptureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool StartCapture() {
            return base.Channel.StartCapture();
        }
        
        public bool StopCapture() {
            return base.Channel.StopCapture();
        }
        
        public bool IsCapturing() {
            return base.Channel.IsCapturing();
        }
        
        public string[] GetCaptureFileList() {
            return base.Channel.GetCaptureFileList();
        }
        
        public string GetCurrentCaptureFileName() {
            return base.Channel.GetCurrentCaptureFileName();
        }
        
        public string RetreiveCapture(string fileName, bool withDelete) {
            return base.Channel.RetreiveCapture(fileName, withDelete);
        }
        
        public bool DeleteCapture(string fileName) {
            return base.Channel.DeleteCapture(fileName);
        }
    }
}
